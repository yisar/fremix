{
  "version": 3,
  "sources": ["../src/react-shim.js", "../src/index.js", "../demo/pages/index.js", "../server.js", "../src/render-app.js", "../demo/routes.js", "../src/loadable.js", "../src/match-route.js", "../demo/entry-server.js"],
  "sourcesContent": ["export * as React from 'react';", "import React, { createContext } from \"react\";\r\n\r\nconst RouteDataContext = createContext(null)\r\n\r\nexport const useLoaderData = () => {\r\n    const context = useContext(RouteDataContext);\r\n\r\n    return context;\r\n}", "import { useLoaderData } from '../../src/index';\n\nexport const loader = async () => {\n  const res = await fetch(\n    'https://jsonplaceholder.typicode.com/posts?_limit=5'\n  );\n  const posts = await res.json();\n\n  return {\n    props: {\n      posts,\n    },\n  };\n};\n\nexport default function Home() {\n  const { posts }= useLoaderData();\n\n  return (\n    <>\n      {posts.map(post => (\n        <div key={post.id}>\n          <a href={`/${post.id}`}>{post.title}</a>\n        </div>\n      ))}\n    </>\n  );\n}\n", "import express from 'express';\r\nimport { renderApp } from './src/render-app';\r\nimport handleRequest from './demo/entry-server'\r\n\r\nconst app = express();\r\n\r\napp.use(express.static('public'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\napp.use('/', async function (req, res) {\r\n  const RemixApp = await renderApp(req.originalUrl);\r\n\r\n    if (RemixApp.notFound === true) {\r\n      return res.status(404).send('Page not found');\r\n    }\r\n\r\n    const html = handleRequest(RemixApp);\r\n    res.setHeader('content-type', 'text/html');\r\n    res.send(html);\r\n});\r\n\r\napp.listen(3000, () => {\r\n  console.log('Server started on http://localhost:3000');\r\n})", "import { routes } from \"../demo/routes\";\r\nimport matchRoute from \"./match-route\";\r\n\r\nexport async function renderApp(url) {\r\n    const urlWithoutQuery = new URL(`https://example.com${url}`).pathname;\r\n    const route = routes.find(x => matchRoute(x.path, urlWithoutQuery))\r\n    if (!route) {\r\n        return { notFound: true }\r\n    }\r\n    const page = await route.page()\r\n    console.log(page)\r\n    const data = page.loader()\r\n    const component = page.defalut\r\n\r\n    return () => {\r\n        return <App Component={component} data={data}></App>\r\n    }\r\n}\r\n\r\nfunction App({ Component, data }) {\r\n    console.log(data)\r\n    return (\r\n        <html lang=\"en\">\r\n            <head>\r\n                <meta charSet=\"UTF-8\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n            </head>\r\n            <body>\r\n                <div id=\"__fremix\">\r\n                    <Component />\r\n                </div>\r\n            </body>\r\n        </html>\r\n    );\r\n}", "import loadable from '../src/loadable';\n\nexport const routes = makeRoutes([\n  {\n    path: '/',\n    page: () => import('./pages'),\n  }\n]);\n\nfunction makeRoutes(\n  routes\n) {\n  return routes.map(route => ({\n    ...route,\n    component: route.component || loadable(route.page),\n  }));\n}\n", "import { useRef, useEffect, useCallback, useState } from 'react';\r\n\r\nfunction useForceUpdate() {\r\n  const [, dispatch] = useState({});\r\n\r\n  const forceUpdate = useCallback(() => {\r\n    dispatch({});\r\n  }, []);\r\n\r\n  return forceUpdate;\r\n}\r\n\r\nexport default function loadable(importFn, { fallback = () => null } = {}) {\r\n  return function LoadableComponent(props) {\r\n    const component = useRef(fallback);\r\n    const forceUpdate = useForceUpdate();\r\n\r\n    useEffect(() => {\r\n      importFn(props).then(mod => {\r\n        component.current = mod.default;\r\n        forceUpdate();\r\n      });\r\n    }, []);\r\n\r\n    return <component.current {...props} />;\r\n  };\r\n}", "import param from 'regexparam'\r\n\r\nexport default function matchRoute(route, toMatch) {\r\n  const routeRegex = param(route);\r\n  return routeRegex.pattern.test(toMatch);\r\n}", "import ReactDOMServer from 'react-dom/server';\n\nexport default function handleRequest(App) {\n  const markup = ReactDOMServer.renderToString(<App />);\n  return `<!DOCTYPE html>${markup}`;\n}\n"],
  "mappings": "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",
  "names": []
}
